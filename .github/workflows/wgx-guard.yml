name: wgx-guard
permissions:
  contents: read
on:
  push:
    paths:
      - ".wgx/**"
      - ".github/workflows/**"
      - "pyproject.toml"
      - "uv.lock"
      - "Cargo.toml"
  pull_request:
    paths:
      - ".wgx/**"
      - ".github/workflows/**"
      - "pyproject.toml"
      - "uv.lock"
      - "Cargo.toml"
  workflow_dispatch:

jobs:
  guard:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    concurrency:
      group: wgx-guard-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4

      - name: Check or create .wgx/profile.yml (fallback from example)
        run: |
          set -euo pipefail
          if [ ! -f .wgx/profile.yml ]; then
            if [ -f .wgx/profile.example.yml ]; then
              echo "Using .wgx/profile.example.yml as fallback"
              cp .wgx/profile.example.yml .wgx/profile.yml
            else
              echo "::error::.wgx/profile.yml missing"
              exit 1
            fi
          fi
          echo "OK: .wgx/profile.yml present"

      - name: Install shellcheck (cached)
        uses: taiki-e/install-action@v2
        with:
          tool: shellcheck

      - name: Install shfmt (cached)
        uses: taiki-e/install-action@v2
        with:
          tool: shfmt

      - name: Shell Lint
        run: |
          set -euo pipefail
          mapfile -t scripts < <(git ls-files '*.sh' '*.bash')
          if [ "${#scripts[@]}" -eq 0 ]; then
            echo "No shell scripts found; skipping lint."
            exit 0
          fi
          bash -n "${scripts[@]}"
          shfmt -d "${scripts[@]}"
          shellcheck -S style "${scripts[@]}"

      - name: Install uv (only if pyproject exists)
        run: |
          set -euo pipefail
          if [ ! -f pyproject.toml ]; then
            echo "No pyproject.toml – skipping uv installation."
            exit 0
          fi
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> '$GITHUB_PATH'
          export PATH="$HOME/.local/bin:$PATH"
          uv --version

      - name: uv contracts (only if pyproject exists)
        run: |
          set -euo pipefail
          if [ -f pyproject.toml ]; then
            if [ -f uv.lock ]; then
              echo "OK: uv.lock present"
            else
              echo "::error::uv.lock missing (pyproject.toml present)"
              exit 1
            fi
          else
            echo "No pyproject.toml – skipping uv.lock check."
          fi

      - name: Rust manifest check
        run: |
          set -euo pipefail
          if [ -f Cargo.toml ]; then
            rustup toolchain install stable --profile minimal
            cargo metadata --no-deps >/dev/null
          else
            echo "No Cargo.toml present – skipping."
          fi

      - name: Done
        run: echo "wgx-guard passed ✅"
