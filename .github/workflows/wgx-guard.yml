name: wgx-guard
permissions:
  id-token: write
  contents: read
on:
  push:
    paths:
      - ".wgx/**"
      - ".wgx/profile.example.yml"
      - ".github/workflows/**"
      - "pyproject.toml"
      - "uv.lock"
      - "Cargo.toml"
  pull_request:
    paths:
      - ".wgx/**"
      - ".wgx/profile.example.yml"
      - ".github/workflows/**"
      - "pyproject.toml"
      - "uv.lock"
      - "Cargo.toml"
  workflow_dispatch:

jobs:
  guard:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    concurrency:
      group: wgx-guard-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4

      - name: Ensure bash is available
        shell: sh
        run: |
          if ! command -v bash >/dev/null 2>&1; then
            echo "::error::bash not found in PATH. Use a runner or container image that already includes bash."
            exit 1
          fi
          bash --version

      - name: Repo smoke (ultra-fast)
        run: |
          set -euo pipefail
          echo "ref=${{ github.ref }} sha=${{ github.sha }}"
          test -s README.md || echo "::warning::README.md missing or empty"
          if [ -f Cargo.toml ]; then
            if command -v cargo >/dev/null 2>&1; then
              cargo metadata --no-deps >/dev/null
            else
              echo "::notice::Cargo.toml present but 'cargo' not found – skipping Rust smoke"
            fi
          fi
          if [ -f pyproject.toml ]; then
            grep -q '^[[:space:]]*\[project\]' pyproject.toml || echo "::warning::[project] section not found in pyproject.toml"
          fi

      - name: Check .wgx profile presence
        run: |
          set -euo pipefail
          if [ -f .wgx/profile.yml ]; then
            echo "OK: .wgx/profile.yml present"
          elif [ -f .wgx/profile.example.yml ]; then
            echo "::warning::.wgx/profile.yml missing – using .wgx/profile.example.yml as CI placeholder"
            # For visual inspection only: no secrets, structure hint only
            head -n 20 .wgx/profile.example.yml || true
          else
            echo "::error::.wgx/profile.yml and .wgx/profile.example.yml both missing"
            exit 1
          fi

      - name: Install shellcheck (cached)
        uses: taiki-e/install-action@v2
        with:
          tool: shellcheck

      - name: Install shfmt (cached)
        uses: taiki-e/install-action@v2
        with:
          tool: shfmt

      - name: Shell Lint
        run: |
          set -euo pipefail
          mapfile -t scripts < <(git ls-files '*.sh' '*.bash')
          if [ "${#scripts[@]}" -eq 0 ]; then
            echo "No shell scripts found; skipping lint."
            exit 0
          fi
          bash -n "${scripts[@]}"
          shfmt -d "${scripts[@]}"
          shellcheck -S style "${scripts[@]}"

      - name: Install uv (only if pyproject exists)
        run: |
          set -euo pipefail
          if [ ! -f pyproject.toml ]; then
            echo "No pyproject.toml – skipping uv installation."
            exit 0
          fi
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> '$GITHUB_PATH'
          export PATH="$HOME/.local/bin:$PATH"
          uv --version

      - name: uv contracts (only if pyproject exists)
        run: |
          set -euo pipefail
          if [ -f pyproject.toml ]; then
            if [ -f uv.lock ]; then
              echo "OK: uv.lock present"
            else
              echo "::error::uv.lock missing (pyproject.toml present)"
              exit 1
            fi
          else
            echo "No pyproject.toml – skipping uv.lock check."
          fi

      - name: Rust manifest check
        run: |
          set -euo pipefail
          if [ -f Cargo.toml ]; then
            rustup toolchain install stable --profile minimal
            cargo metadata --no-deps >/dev/null
          else
            echo "No Cargo.toml present – skipping."
          fi

      - name: Done
        run: echo "wgx-guard passed ✅"
